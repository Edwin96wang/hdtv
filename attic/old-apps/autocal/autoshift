#!/bin/sh

export PYTHONPATH=/home/braun/gspec/pylib

python << EOF
from __future__ import with_statement
import ROOT
import gc
from diploma import Horus88Zr
from specreader import SpecReader
from autoshift import Autoshift

ROOT.TH1.AddDirectory(ROOT.kFALSE)
		
def main():
	experiment = Horus88Zr()
	# fname = experiment.SpecFile(8,8)
	# hist = SpecReader().Get(fname, fname, "hist")
	# a = Autoshift()
	
	#gc.set_debug(gc.DEBUG_LEAK)

	for run in experiment.fGoodRuns:
		for det in range(0,16):
			# print "Processing: Run %d, Detector ge%d" % (run, det)
			if run in experiment.fBadRuns[det]:
				print "Info: Ignoring Run %d, Detector ge%d" % (run, det)
				a = None
				p0 = 50000
				p1 = 0.001
				
			else:
				a = Autoshift()
				a.ReadRefPeaks("../autocal/ge%d.sig" % det)
	
				fname = experiment.SpecFile(run, det)
				hist = SpecReader().Get(fname, fname, "hist")
		
				a.FindPeaks(hist)
				a.MatchPeaks()
				a.Fit()
				
				p0 = a.p0
				p1 = a.p1
			
				if abs(p0) > 50:
					print "Warning: Run %d, Det %d: p0 = %.2f" % (run, det, p0)
				
				if abs(p1 - 1.0) > 0.5:
					print "Warning: Run %d, Det %d: p1 = %.4f" % (run, det, p1)
				
				if a.chi2 > 1.0:
					print "Warning: Run %d, Det %d: \\chi^2 = %.3f" % (run, det, a.chi2)
		
			if det < 8:
				ofname = "shiftfiles/%04d/ge%d.%04d_shd" % (run, det, run)
				with open(ofname, 'w') as f:
					f.write("1.00 %.2f\n" % (p0 + 1.0 * p1))
					f.write("16374.0 %.2f\n" % (p0 + 16374.0 * p1))
			else:
				ofname = "shiftfiles/%04d/pge%d.%04d_shd" % (run, det-8, run)
				with open(ofname, 'w') as f:
					f.write("1.00 %.2f\n" % (p0 + 1.0 * p1))
					f.write("8182.0 %.2f\n" % (p0 + 8182.0 * p1))
			
			# gc.collect()
	
main()
EOF

