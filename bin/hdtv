#!/usr/bin/env python
# -*- coding: utf-8 -*-
#-------------------------------------------------------------------------------
# This is the main HDTV application.
#-------------------------------------------------------------------------------

# Load required modules
import sys
import os

# Get ~/.hdtv directory
try:
    configpath = os.environ["HDTV_USER_PATH"]
except KeyError:
    configpath = os.path.expanduser("~/.hdtv")

if not os.access(configpath, os.W_OK):   
    try:
        os.mkdir(configpath, 0755)
    except OSError:
        print >>sys.stderr, "Could not access config path", configpath
        print >>sys.stderr, "Try setting HDTV_USER_PATH environment variable."
        sys.exit(1)

sys.path.append(configpath)
sys.path.append(configpath + "/plugins")

# Check if we are inside the hdtv source directory
hdtvpath=sys.path[0].split(os.sep)
hdtvpath = os.sep.join(hdtvpath[:-1])
if os.path.exists(hdtvpath+os.sep+'hdtv'):
    sys.path.insert(2,hdtvpath)

# Import core modules
import hdtv.cmdline
import hdtv.session
import hdtv.ui


hdtv.cmdline.ReadReadlineInit(configpath + "/inputrc")
hdtv.cmdline.SetReadlineHistory(configpath + "/hdtv_history")
hdtv.cmdline.SetInteractiveDict(locals())
spectra = hdtv.session.Session()

# Import core plugins
#import hdtv.plugins.textInterface
#import hdtv.plugins.ls
#import hdtv.plugins.run
import hdtv.plugins.specInterface 
#import hdtv.plugins.fitInterface
#import hdtv.plugins.calibration
#import hdtv.plugins.matrix
#import hdtv.plugins.rootfile
#import hdtv.plugins.config
#import hdtv.plugins.fitlist
#import hdtv.plugins.dblookup
#import hdtv.plugins.peakfinder

# Execute startup.py for user configuration in python
try:
    import startup
except ImportError:
    hdtv.ui.msg("No startup.py file")

# Execute startup.hdtv for user configuration in "hdtv" language
try:
    startup_hdtv = configpath + os.sep + "startup.hdtv"
    if os.path.exists(startup_hdtv):
        hdtv.cmdline.command_line.ExecCmdfile(startup_hdtv)
    else:
        hdtv.ui.msg("No startup.hdtv file")
except IOError, msg:
    hdtv.ui.msg("Error reading %s: %s" % (startup_hdtv, msg))
    
hdtv.ui.newline()
hdtv.ui.msg("=========================================================")
hdtv.ui.msg(" HDTV - Nuclear Spectrum Analysis Tool")
hdtv.ui.newline()
hdtv.ui.msg("  Copyleft: Institut for Nuclear Physics, Cologne")
hdtv.ui.msg("  Authors:  Norbert Braun, Tanja Kotthaus, Ralf Schulze")
hdtv.ui.newline()
hdtv.ui.msg("  This software is licensed under the GPL.") 
hdtv.ui.msg("=========================================================")
hdtv.ui.newline()
# Go

hdtv.cmdline.MainLoop()
hdtv.cmdline.command_tree.SetDefaultLevel(1)

